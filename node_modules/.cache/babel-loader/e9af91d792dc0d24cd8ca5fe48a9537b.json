{"ast":null,"code":"var _jsxFileName = \"/Users/harrisonwilson/Development/code/phase-2-project/phase2-project/src/Comment.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Comment(_ref) {\n  _s();\n  let {\n    postID\n  } = _ref;\n  const [newComment, setNewComment] = useState(\"\");\n  function handleCommentSubmit(e) {\n    e.preventDefault();\n    fetch(`http://localhost:3000/posts/${postID}`, {\n      method: 'PUT',\n      headers: {\n        'content-type': 'applications/json'\n      },\n      body: JSON.stringify({\n        comments: e.target.commentInput.value\n      })\n    }).then(resp => resp.json()).then(data => setNewComment(data));\n  }\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: e => handleCommentSubmit(e),\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"commentInput\",\n      placeholder: \"Type a comment here!\",\n      onChange: e => setNewComment(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"POST!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n}\n_s(Comment, \"hdmU//CB++ZG3hy6Wzlv3cAh5aM=\");\n_c = Comment;\nexport default Comment;\nvar _c;\n$RefreshReg$(_c, \"Comment\");","map":{"version":3,"names":["React","useState","Comment","postID","newComment","setNewComment","handleCommentSubmit","e","preventDefault","fetch","method","headers","body","JSON","stringify","comments","target","commentInput","value","then","resp","json","data"],"sources":["/Users/harrisonwilson/Development/code/phase-2-project/phase2-project/src/Comment.js"],"sourcesContent":["import React, { useState } from \"react\"\n\nfunction Comment({postID}) {\n\n    const [newComment, setNewComment] = useState(\"\")\n\n    function handleCommentSubmit(e) {\n        e.preventDefault()\n        fetch(`http://localhost:3000/posts/${postID}`, {\n            method: 'PUT',\n            headers: { 'content-type': 'applications/json' },\n            body: JSON.stringify({\n                comments: e.target.commentInput.value\n            })\n        })\n        .then(resp => resp.json())\n        .then(data => setNewComment(data))\n    }\n\n    return (\n        <form onSubmit={(e) => handleCommentSubmit(e)}>\n            <input type=\"text\" name=\"commentInput\" placeholder=\"Type a comment here!\" onChange={(e) => setNewComment(e.target.value)}></input>\n            <button type=\"submit\">POST!</button>\n        </form>\n    )\n\n}\n\nexport default Comment;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAA;AAEvC,SAASC,OAAO,OAAW;EAAA;EAAA,IAAV;IAACC;EAAM,CAAC;EAErB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGJ,QAAQ,CAAC,EAAE,CAAC;EAEhD,SAASK,mBAAmB,CAACC,CAAC,EAAE;IAC5BA,CAAC,CAACC,cAAc,EAAE;IAClBC,KAAK,CAAE,+BAA8BN,MAAO,EAAC,EAAE;MAC3CO,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAoB,CAAC;MAChDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACjBC,QAAQ,EAAER,CAAC,CAACS,MAAM,CAACC,YAAY,CAACC;MACpC,CAAC;IACL,CAAC,CAAC,CACDC,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACC,IAAI,EAAE,CAAC,CACzBF,IAAI,CAACG,IAAI,IAAIjB,aAAa,CAACiB,IAAI,CAAC,CAAC;EACtC;EAEA,oBACI;IAAM,QAAQ,EAAGf,CAAC,IAAKD,mBAAmB,CAACC,CAAC,CAAE;IAAA,wBAC1C;MAAO,IAAI,EAAC,MAAM;MAAC,IAAI,EAAC,cAAc;MAAC,WAAW,EAAC,sBAAsB;MAAC,QAAQ,EAAGA,CAAC,IAAKF,aAAa,CAACE,CAAC,CAACS,MAAM,CAACE,KAAK;IAAE;MAAA;MAAA;MAAA;IAAA,QAAS,eAClI;MAAQ,IAAI,EAAC,QAAQ;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAe;EAAA;IAAA;IAAA;IAAA;EAAA,QACjC;AAGf;AAAC,GAxBQhB,OAAO;AAAA,KAAPA,OAAO;AA0BhB,eAAeA,OAAO;AAAC;AAAA"},"metadata":{},"sourceType":"module"}