{"ast":null,"code":"var _jsxFileName = \"/Users/harrisonwilson/Development/code/phase-2-project/phase2-project/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport './App.css';\nimport Header from \"./Header\";\nimport GameContainer from \"./GameContainer\";\nimport PostContainer from \"./PostContainer\";\nimport NewPostForm from \"./NewPostForm\";\n// import gameData from \"./data/db.json\"\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [gameList, setGameList] = useState([]);\n  const [postList, setPostList] = useState([]);\n  const [gameToFilter, setGameToFilter] = useState(\"\");\n  useEffect(() => {\n    fetch(\"http://localhost:3000/games\").then(resp => resp.json()).then(data => setGameList(data));\n  }, []);\n  useEffect(() => {\n    fetch(\"http://localhost:3000/posts\").then(resp => resp.json()).then(data => setPostList(data));\n  }, []);\n  function handleGameFormSubmit(name, image, description, genre) {\n    fetch(\"http://localhost:3000/games\", {\n      method: \"POST\",\n      headers: {\n        'content-type': 'application/json'\n      },\n      body: JSON.stringify({\n        name: name,\n        description: description,\n        image: image,\n        genre: genre\n      })\n    }).then(resp => resp.json()).then(data => {\n      setGameList([...gameList, data]);\n    });\n  }\n  function handlePostFormSubmit(title, description, status, game) {\n    fetch(\"http://localhost:3000/posts\", {\n      method: \"POST\",\n      headers: {\n        'content-type': 'application/json'\n      },\n      body: JSON.stringify({\n        title: title,\n        description: description,\n        status: status,\n        game: game,\n        comments: {}\n      })\n    }).then(resp => resp.json()).then(data => {\n      setPostList([...postList, data]);\n    });\n  }\n  const postsFilteredByGame = postList.filter(post => {\n    if (post.game === gameToFilter) {\n      return true;\n    } else if (gameToFilter === \"\") {\n      return true;\n    } else {\n      return false;\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      onFormSubmit: handleGameFormSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GameContainer, {\n      gameData: gameList,\n      gameToFilter: gameToFilter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NewPostForm, {\n      gameData: gameList,\n      onPostFormSubmit: handlePostFormSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PostContainer, {\n      postData: postList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"qBWWfCNorKuC3Mk7R3wHS5b0IvU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","Header","GameContainer","PostContainer","NewPostForm","App","gameList","setGameList","postList","setPostList","gameToFilter","setGameToFilter","fetch","then","resp","json","data","handleGameFormSubmit","name","image","description","genre","method","headers","body","JSON","stringify","handlePostFormSubmit","title","status","game","comments","postsFilteredByGame","filter","post"],"sources":["/Users/harrisonwilson/Development/code/phase-2-project/phase2-project/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\"\nimport './App.css';\nimport Header from \"./Header\"\nimport GameContainer from \"./GameContainer\";\nimport PostContainer from \"./PostContainer\";\nimport NewPostForm from \"./NewPostForm\";\n// import gameData from \"./data/db.json\"\n\nfunction App() {\n  const [gameList, setGameList] = useState([])\n  const [postList, setPostList] = useState([])\n  const [gameToFilter, setGameToFilter] = useState(\"\")\n\n\n  useEffect(() => {\n    fetch(\"http://localhost:3000/games\")\n      .then(resp => resp.json())\n      .then(data => setGameList(data))\n  },\n    [])\n\n  useEffect(() =>{\n    fetch(\"http://localhost:3000/posts\")\n    .then(resp => resp.json())\n    .then(data => setPostList(data))\n  },\n  [])\n\n  function handleGameFormSubmit(name, image, description, genre) {\n    fetch(\"http://localhost:3000/games\", {\n      method: \"POST\",\n      headers: { 'content-type': 'application/json' },\n      body: JSON.stringify({\n        name: name,\n        description: description,\n        image: image,\n        genre: genre\n      })\n    })\n      .then(resp => resp.json())\n      .then(data => {\n        setGameList([...gameList, data])\n      })\n  }\n\n  function handlePostFormSubmit(title, description, status, game) {\n    fetch(\"http://localhost:3000/posts\", {\n      method: \"POST\",\n      headers: { 'content-type': 'application/json' },\n      body: JSON.stringify({\n        title: title,\n        description: description,\n        status: status,\n        game: game,\n        comments: {}\n      })\n    })\n      .then(resp => resp.json())\n      .then(data => {\n        setPostList([...postList, data])\n      })\n  }\n\n  const postsFilteredByGame = postList.filter((post) => {\n    if (post.game === gameToFilter) {\n      return true\n    } \n    else if (gameToFilter === \"\") {\n      return true\n    }\n    else {\n      return false\n    }\n  })\n\n\n\n  return (\n    <div className=\"App\">\n      <Header onFormSubmit={handleGameFormSubmit} />\n      <GameContainer \n      gameData={gameList} \n      gameToFilter={gameToFilter}/>\n      <NewPostForm gameData={gameList} onPostFormSubmit={handlePostFormSubmit}/>\n      <PostContainer postData={postList}/>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module"}